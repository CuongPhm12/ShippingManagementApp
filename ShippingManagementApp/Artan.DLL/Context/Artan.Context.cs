//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Artan.DLL.Context
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Artan_DBEntities : DbContext
    {
        public Artan_DBEntities()
            : base("name=Artan_DBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tbl_Education> tbl_Education { get; set; }
        public virtual DbSet<tbl_Persons> tbl_Persons { get; set; }
        public virtual DbSet<tbl_Position> tbl_Position { get; set; }
        public virtual DbSet<vw_Persons> vw_Persons { get; set; }
        public virtual DbSet<tbl_Companies> tbl_Companies { get; set; }
        public virtual DbSet<vw_Companies> vw_Companies { get; set; }
        public virtual DbSet<tbl_Package> tbl_Package { get; set; }
        public virtual DbSet<tbl_Post> tbl_Post { get; set; }
        public virtual DbSet<tbl_Condition> tbl_Condition { get; set; }
        public virtual DbSet<tbl_Orders> tbl_Orders { get; set; }
        public virtual DbSet<vw_Orders> vw_Orders { get; set; }
    
        public virtual int sp_PersonDelete(Nullable<int> personID)
        {
            var personIDParameter = personID.HasValue ?
                new ObjectParameter("PersonID", personID) :
                new ObjectParameter("PersonID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PersonDelete", personIDParameter);
        }
    
        public virtual int sp_PersonInsert(string firstName, string lastName, Nullable<bool> gender, string birthDate, Nullable<int> educationID, string email, string mobile, Nullable<bool> condition, string address, Nullable<int> positionID, string userName, string password, string createDate)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(bool));
    
            var birthDateParameter = birthDate != null ?
                new ObjectParameter("BirthDate", birthDate) :
                new ObjectParameter("BirthDate", typeof(string));
    
            var educationIDParameter = educationID.HasValue ?
                new ObjectParameter("EducationID", educationID) :
                new ObjectParameter("EducationID", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var conditionParameter = condition.HasValue ?
                new ObjectParameter("Condition", condition) :
                new ObjectParameter("Condition", typeof(bool));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var positionIDParameter = positionID.HasValue ?
                new ObjectParameter("PositionID", positionID) :
                new ObjectParameter("PositionID", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var createDateParameter = createDate != null ?
                new ObjectParameter("CreateDate", createDate) :
                new ObjectParameter("CreateDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PersonInsert", firstNameParameter, lastNameParameter, genderParameter, birthDateParameter, educationIDParameter, emailParameter, mobileParameter, conditionParameter, addressParameter, positionIDParameter, userNameParameter, passwordParameter, createDateParameter);
        }
    
        public virtual ObjectResult<sp_PersonSearch_Result> sp_PersonSearch(string searchName)
        {
            var searchNameParameter = searchName != null ?
                new ObjectParameter("SearchName", searchName) :
                new ObjectParameter("SearchName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PersonSearch_Result>("sp_PersonSearch", searchNameParameter);
        }
    
        public virtual int sp_PersonUpdate(Nullable<int> personID, string firstName, string lastName, Nullable<bool> gender, string birthDate, Nullable<int> educationID, string email, string mobile, Nullable<bool> condition, string address, Nullable<int> positionID, string userName, string password, string createDate)
        {
            var personIDParameter = personID.HasValue ?
                new ObjectParameter("PersonID", personID) :
                new ObjectParameter("PersonID", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(bool));
    
            var birthDateParameter = birthDate != null ?
                new ObjectParameter("BirthDate", birthDate) :
                new ObjectParameter("BirthDate", typeof(string));
    
            var educationIDParameter = educationID.HasValue ?
                new ObjectParameter("EducationID", educationID) :
                new ObjectParameter("EducationID", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var conditionParameter = condition.HasValue ?
                new ObjectParameter("Condition", condition) :
                new ObjectParameter("Condition", typeof(bool));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var positionIDParameter = positionID.HasValue ?
                new ObjectParameter("PositionID", positionID) :
                new ObjectParameter("PositionID", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var createDateParameter = createDate != null ?
                new ObjectParameter("CreateDate", createDate) :
                new ObjectParameter("CreateDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PersonUpdate", personIDParameter, firstNameParameter, lastNameParameter, genderParameter, birthDateParameter, educationIDParameter, emailParameter, mobileParameter, conditionParameter, addressParameter, positionIDParameter, userNameParameter, passwordParameter, createDateParameter);
        }
    
        public virtual int sp_CompanyDelete(Nullable<int> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CompanyDelete", companyIDParameter);
        }
    
        public virtual int sp_CompanyInsert(string companyName, string representative, Nullable<bool> companyType, string collaborationDate, string email, string phone, string mobile, string fax, Nullable<bool> status, string address, byte[] pic, string createDate)
        {
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var representativeParameter = representative != null ?
                new ObjectParameter("Representative", representative) :
                new ObjectParameter("Representative", typeof(string));
    
            var companyTypeParameter = companyType.HasValue ?
                new ObjectParameter("CompanyType", companyType) :
                new ObjectParameter("CompanyType", typeof(bool));
    
            var collaborationDateParameter = collaborationDate != null ?
                new ObjectParameter("CollaborationDate", collaborationDate) :
                new ObjectParameter("CollaborationDate", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var picParameter = pic != null ?
                new ObjectParameter("Pic", pic) :
                new ObjectParameter("Pic", typeof(byte[]));
    
            var createDateParameter = createDate != null ?
                new ObjectParameter("CreateDate", createDate) :
                new ObjectParameter("CreateDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CompanyInsert", companyNameParameter, representativeParameter, companyTypeParameter, collaborationDateParameter, emailParameter, phoneParameter, mobileParameter, faxParameter, statusParameter, addressParameter, picParameter, createDateParameter);
        }
    
        public virtual ObjectResult<sp_CompanySearch_Result> sp_CompanySearch(string searchName)
        {
            var searchNameParameter = searchName != null ?
                new ObjectParameter("SearchName", searchName) :
                new ObjectParameter("SearchName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CompanySearch_Result>("sp_CompanySearch", searchNameParameter);
        }
    
        public virtual int sp_CompanyUpdate(Nullable<int> companyID, string companyName, string representative, Nullable<bool> companyType, string collaborationDate, string email, string mobile, string fax, Nullable<bool> status, string address, byte[] pic, string createDate)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var representativeParameter = representative != null ?
                new ObjectParameter("Representative", representative) :
                new ObjectParameter("Representative", typeof(string));
    
            var companyTypeParameter = companyType.HasValue ?
                new ObjectParameter("CompanyType", companyType) :
                new ObjectParameter("CompanyType", typeof(bool));
    
            var collaborationDateParameter = collaborationDate != null ?
                new ObjectParameter("CollaborationDate", collaborationDate) :
                new ObjectParameter("CollaborationDate", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var picParameter = pic != null ?
                new ObjectParameter("Pic", pic) :
                new ObjectParameter("Pic", typeof(byte[]));
    
            var createDateParameter = createDate != null ?
                new ObjectParameter("CreateDate", createDate) :
                new ObjectParameter("CreateDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CompanyUpdate", companyIDParameter, companyNameParameter, representativeParameter, companyTypeParameter, collaborationDateParameter, emailParameter, mobileParameter, faxParameter, statusParameter, addressParameter, picParameter, createDateParameter);
        }
    
        public virtual int sp_OrderDelete(Nullable<int> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OrderDelete", orderIDParameter);
        }
    
        public virtual int sp_OrderInsert(Nullable<int> orderID, string orderDate, Nullable<bool> paymentStatus, Nullable<int> conditionID, Nullable<int> senderID, string sender, string senderName, string senderMobile, string senderAddress, Nullable<int> receiverID, string receiver, string receiverName, string receiverMobile, string receiverAddress, Nullable<int> postID, Nullable<int> packageID, Nullable<bool> payment, string weight, string number, string shippingCosts, string adminstrativeCosts, string discount, string totalCost, string description, string createDate)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            var orderDateParameter = orderDate != null ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(string));
    
            var paymentStatusParameter = paymentStatus.HasValue ?
                new ObjectParameter("PaymentStatus", paymentStatus) :
                new ObjectParameter("PaymentStatus", typeof(bool));
    
            var conditionIDParameter = conditionID.HasValue ?
                new ObjectParameter("ConditionID", conditionID) :
                new ObjectParameter("ConditionID", typeof(int));
    
            var senderIDParameter = senderID.HasValue ?
                new ObjectParameter("SenderID", senderID) :
                new ObjectParameter("SenderID", typeof(int));
    
            var senderParameter = sender != null ?
                new ObjectParameter("Sender", sender) :
                new ObjectParameter("Sender", typeof(string));
    
            var senderNameParameter = senderName != null ?
                new ObjectParameter("SenderName", senderName) :
                new ObjectParameter("SenderName", typeof(string));
    
            var senderMobileParameter = senderMobile != null ?
                new ObjectParameter("SenderMobile", senderMobile) :
                new ObjectParameter("SenderMobile", typeof(string));
    
            var senderAddressParameter = senderAddress != null ?
                new ObjectParameter("SenderAddress", senderAddress) :
                new ObjectParameter("SenderAddress", typeof(string));
    
            var receiverIDParameter = receiverID.HasValue ?
                new ObjectParameter("ReceiverID", receiverID) :
                new ObjectParameter("ReceiverID", typeof(int));
    
            var receiverParameter = receiver != null ?
                new ObjectParameter("Receiver", receiver) :
                new ObjectParameter("Receiver", typeof(string));
    
            var receiverNameParameter = receiverName != null ?
                new ObjectParameter("ReceiverName", receiverName) :
                new ObjectParameter("ReceiverName", typeof(string));
    
            var receiverMobileParameter = receiverMobile != null ?
                new ObjectParameter("ReceiverMobile", receiverMobile) :
                new ObjectParameter("ReceiverMobile", typeof(string));
    
            var receiverAddressParameter = receiverAddress != null ?
                new ObjectParameter("ReceiverAddress", receiverAddress) :
                new ObjectParameter("ReceiverAddress", typeof(string));
    
            var postIDParameter = postID.HasValue ?
                new ObjectParameter("PostID", postID) :
                new ObjectParameter("PostID", typeof(int));
    
            var packageIDParameter = packageID.HasValue ?
                new ObjectParameter("PackageID", packageID) :
                new ObjectParameter("PackageID", typeof(int));
    
            var paymentParameter = payment.HasValue ?
                new ObjectParameter("Payment", payment) :
                new ObjectParameter("Payment", typeof(bool));
    
            var weightParameter = weight != null ?
                new ObjectParameter("Weight", weight) :
                new ObjectParameter("Weight", typeof(string));
    
            var numberParameter = number != null ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(string));
    
            var shippingCostsParameter = shippingCosts != null ?
                new ObjectParameter("ShippingCosts", shippingCosts) :
                new ObjectParameter("ShippingCosts", typeof(string));
    
            var adminstrativeCostsParameter = adminstrativeCosts != null ?
                new ObjectParameter("AdminstrativeCosts", adminstrativeCosts) :
                new ObjectParameter("AdminstrativeCosts", typeof(string));
    
            var discountParameter = discount != null ?
                new ObjectParameter("Discount", discount) :
                new ObjectParameter("Discount", typeof(string));
    
            var totalCostParameter = totalCost != null ?
                new ObjectParameter("TotalCost", totalCost) :
                new ObjectParameter("TotalCost", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var createDateParameter = createDate != null ?
                new ObjectParameter("CreateDate", createDate) :
                new ObjectParameter("CreateDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OrderInsert", orderIDParameter, orderDateParameter, paymentStatusParameter, conditionIDParameter, senderIDParameter, senderParameter, senderNameParameter, senderMobileParameter, senderAddressParameter, receiverIDParameter, receiverParameter, receiverNameParameter, receiverMobileParameter, receiverAddressParameter, postIDParameter, packageIDParameter, paymentParameter, weightParameter, numberParameter, shippingCostsParameter, adminstrativeCostsParameter, discountParameter, totalCostParameter, descriptionParameter, createDateParameter);
        }
    
        public virtual ObjectResult<sp_OrderSearch_Result> sp_OrderSearch(string searchName)
        {
            var searchNameParameter = searchName != null ?
                new ObjectParameter("SearchName", searchName) :
                new ObjectParameter("SearchName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_OrderSearch_Result>("sp_OrderSearch", searchNameParameter);
        }
    
        public virtual int sp_OrderUpdate(Nullable<int> orderID, string orderDate, Nullable<bool> paymentStatus, Nullable<int> conditionID, Nullable<int> senderID, string sender, string senderName, string senderMobile, string senderAddress, Nullable<int> receiverID, string receiver, string receiverName, string receiverMobile, string receiverAddress, Nullable<int> postID, Nullable<int> packageID, Nullable<bool> payment, string weight, string number, string shippingCosts, string adminstrativeCosts, string discount, string totalCost, string description, string createDate)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            var orderDateParameter = orderDate != null ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(string));
    
            var paymentStatusParameter = paymentStatus.HasValue ?
                new ObjectParameter("PaymentStatus", paymentStatus) :
                new ObjectParameter("PaymentStatus", typeof(bool));
    
            var conditionIDParameter = conditionID.HasValue ?
                new ObjectParameter("ConditionID", conditionID) :
                new ObjectParameter("ConditionID", typeof(int));
    
            var senderIDParameter = senderID.HasValue ?
                new ObjectParameter("SenderID", senderID) :
                new ObjectParameter("SenderID", typeof(int));
    
            var senderParameter = sender != null ?
                new ObjectParameter("Sender", sender) :
                new ObjectParameter("Sender", typeof(string));
    
            var senderNameParameter = senderName != null ?
                new ObjectParameter("SenderName", senderName) :
                new ObjectParameter("SenderName", typeof(string));
    
            var senderMobileParameter = senderMobile != null ?
                new ObjectParameter("SenderMobile", senderMobile) :
                new ObjectParameter("SenderMobile", typeof(string));
    
            var senderAddressParameter = senderAddress != null ?
                new ObjectParameter("SenderAddress", senderAddress) :
                new ObjectParameter("SenderAddress", typeof(string));
    
            var receiverIDParameter = receiverID.HasValue ?
                new ObjectParameter("ReceiverID", receiverID) :
                new ObjectParameter("ReceiverID", typeof(int));
    
            var receiverParameter = receiver != null ?
                new ObjectParameter("Receiver", receiver) :
                new ObjectParameter("Receiver", typeof(string));
    
            var receiverNameParameter = receiverName != null ?
                new ObjectParameter("ReceiverName", receiverName) :
                new ObjectParameter("ReceiverName", typeof(string));
    
            var receiverMobileParameter = receiverMobile != null ?
                new ObjectParameter("ReceiverMobile", receiverMobile) :
                new ObjectParameter("ReceiverMobile", typeof(string));
    
            var receiverAddressParameter = receiverAddress != null ?
                new ObjectParameter("ReceiverAddress", receiverAddress) :
                new ObjectParameter("ReceiverAddress", typeof(string));
    
            var postIDParameter = postID.HasValue ?
                new ObjectParameter("PostID", postID) :
                new ObjectParameter("PostID", typeof(int));
    
            var packageIDParameter = packageID.HasValue ?
                new ObjectParameter("PackageID", packageID) :
                new ObjectParameter("PackageID", typeof(int));
    
            var paymentParameter = payment.HasValue ?
                new ObjectParameter("Payment", payment) :
                new ObjectParameter("Payment", typeof(bool));
    
            var weightParameter = weight != null ?
                new ObjectParameter("Weight", weight) :
                new ObjectParameter("Weight", typeof(string));
    
            var numberParameter = number != null ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(string));
    
            var shippingCostsParameter = shippingCosts != null ?
                new ObjectParameter("ShippingCosts", shippingCosts) :
                new ObjectParameter("ShippingCosts", typeof(string));
    
            var adminstrativeCostsParameter = adminstrativeCosts != null ?
                new ObjectParameter("AdminstrativeCosts", adminstrativeCosts) :
                new ObjectParameter("AdminstrativeCosts", typeof(string));
    
            var discountParameter = discount != null ?
                new ObjectParameter("Discount", discount) :
                new ObjectParameter("Discount", typeof(string));
    
            var totalCostParameter = totalCost != null ?
                new ObjectParameter("TotalCost", totalCost) :
                new ObjectParameter("TotalCost", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var createDateParameter = createDate != null ?
                new ObjectParameter("CreateDate", createDate) :
                new ObjectParameter("CreateDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OrderUpdate", orderIDParameter, orderDateParameter, paymentStatusParameter, conditionIDParameter, senderIDParameter, senderParameter, senderNameParameter, senderMobileParameter, senderAddressParameter, receiverIDParameter, receiverParameter, receiverNameParameter, receiverMobileParameter, receiverAddressParameter, postIDParameter, packageIDParameter, paymentParameter, weightParameter, numberParameter, shippingCostsParameter, adminstrativeCostsParameter, discountParameter, totalCostParameter, descriptionParameter, createDateParameter);
        }
    }
}
